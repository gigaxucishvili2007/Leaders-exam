# # 3) ამოიღეთ დუბლიკატები სიიდან (3 ქულა)

# შექმენით პროგრამა, რომელიც მიიღებს სიას
#  და ამოიღებს დუბლიკატ ელემენტებს 
# ორიგინალური წესრიგის შენარჩუნებისას.

# lst = [1,2,3,2,]
# lst.pop(3)
# print(lst)


# შექმენით პროგრამა, რომელიც ამოწმებს, არის თუ არა მოცემული სტრიქონი პალინდრომი (კითხულობს იგივე წინ და უკან). ფუნქცია იგნორირებას უკეთებს სივრცეებს, პუნქტუაციას და კაპიტალიზაციას.
# არ მახსოვს

name = 'ana'
print(name == name[::-1])


#დაწერეთ ფუნქცია, რომელიც მიიღებს მაქსიმალურ ზღვარს და აბრუნებს ყველა მარტივ რიცხვს მაქსიმალურ ზღვარამდე და მათ შორის.
# def maximum_limit():
    # num = 3
    # return num

# result = 3
# print(result)




res = ["is2 Thi1s T4est 3a"]
print(res)

res1 = 'This1s T4est 3a'
print(res1)

# თქვენი ამოცანაა დაალაგოთ მოცემული სტრიქონი. სტრიქონში თითოეული სიტყვა შეიცავს ერთ რიცხვს. ეს რიცხვი არის პოზიცია, რომელსაც სიტყვა უნდა ჰქონდეს შედეგში. შენიშვნა: რიცხვები შეიძლება იყოს 1-დან 9-მდე. ასე რომ, 1 იქნება პირველი სიტყვა (არა 0). თუ შეყვანის სტრიქონი ცარიელია, დააბრუნეთ ცარიელი სტრიქონი. შეყვანის სტრიქონში სიტყვები მხოლოდ მოქმედ თანმიმდევრულ რიცხვებს შეიცავს.



# ევრიკას რიცხვები ასეთია: 135 = 1^1 + 3^2 + 5^3. რაც ნიშნავს, რომ ჩვენ უნდა ავიღოთ რიცხვი და შევაჯამოთ მისი რიცხვები ზედიზედ ხარისხებამდე. პირველი ციფრი ხარისხში 1, მეორე ხარისხში 2 და ასე შემდეგ... თუ ამ ჯამის შედეგი იგივეა რაც თავად რიცხვი, ეს ნიშნავს, რომ ეს რიცხვი არის ევრიკა. შექმენით ფუნქცია, რომელიც მიიღებს დიაპაზონს, როგორიცაა (a, b) და გამოაქვს მასში შემავალი ევრიკას ყველა რიცხვი. შენიშვნა: ყველა რიცხვი, რომელსაც აქვს ერთი ციფრი არის ევრიკა, რადგან მაგალითად 5 = 5^1...

#  Binary --> Decimal Conversion (2 ქულა)

# შექმენით პროგრამა, რომელიც მიიღებს ორობით რიცხვს და გარდაქმნის მას ათწილადად.

# number = 20
# print(number - 1.5)


# ათწილადი --> ორობითი კონვერტაცია (2 ქულა) შექმენით პროგრამა, რომელიც მიიღებს ათობითი რიცხვს და გარდაქმნის მას ორობითად.
# flt = 238
# print(flt - 238 + 1)
# 01